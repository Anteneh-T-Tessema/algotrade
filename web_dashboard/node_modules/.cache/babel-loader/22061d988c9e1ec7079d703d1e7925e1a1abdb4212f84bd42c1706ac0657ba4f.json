{"ast":null,"code":"var _jsxFileName = \"/Users/antenehtessema/Desktop/botsalgo/web_dashboard/src/components/Trading/TradingInterface.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, Grid, Typography, Divider, FormControl, InputLabel, Select, MenuItem, TextField, Button, Tabs, Tab, InputAdornment, Slider, Switch, FormControlLabel, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, CircularProgress, Chip, IconButton, Tooltip, ButtonGroup, ToggleButtonGroup, ToggleButton } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { Timeline as TimelineIcon, SwapHoriz as SwapIcon, KeyboardArrowDown as ArrowDownIcon, KeyboardArrowUp as ArrowUpIcon, Close as CloseIcon, Settings as SettingsIcon, Check as CheckIcon, Warning as WarningIcon, Star as StarIcon, StarBorder as StarBorderIcon } from '@mui/icons-material';\nimport TradingViewChart from '../Charts/TradingViewChart';\nimport OrderBookVisualization from './OrderBookVisualization';\nimport ExchangeService from '../../services/ExchangeService';\nimport WebSocketService from '../../services/WebSocketService';\nimport TradingService from '../../services/TradingService';\n\n// Sparkline mini chart component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Sparkline = ({\n  data = [],\n  isPositive = true,\n  width = 60,\n  height = 20\n}) => {\n  _s();\n  const theme = useTheme();\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width,\n        height\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  const values = data.map(d => d.value);\n  const min = Math.min(...values);\n  const max = Math.max(...values);\n  const range = max - min || 1;\n  const points = data.map((d, i) => {\n    const x = i / (data.length - 1) * width;\n    const y = height - (d.value - min) / range * height;\n    return `${x},${y}`;\n  });\n  const path = `M${points.join(' L')}`;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: path,\n      fill: \"none\",\n      stroke: isPositive ? theme.palette.success.main : theme.palette.error.main,\n      strokeWidth: 1.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Sparkline, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = Sparkline;\nconst TradingInterface = () => {\n  _s2();\n  const theme = useTheme();\n\n  // State for trading interface\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [exchanges, setExchanges] = useState([]);\n  const [selectedExchange, setSelectedExchange] = useState('');\n  const [selectedSymbol, setSelectedSymbol] = useState('BTCUSDT');\n  const [availableSymbols, setAvailableSymbols] = useState([]);\n  const [orderType, setOrderType] = useState('limit');\n  const [tradeTab, setTradeTab] = useState('buy');\n  const [price, setPrice] = useState('');\n  const [amount, setAmount] = useState('');\n  const [orderTotal, setOrderTotal] = useState(0);\n  const [openOrders, setOpenOrders] = useState([]);\n  const [orderHistory, setOrderHistory] = useState([]);\n  const [balances, setBalances] = useState({});\n  const [orderBook, setOrderBook] = useState({\n    asks: [],\n    bids: []\n  });\n  const [recentTrades, setRecentTrades] = useState([]);\n  const [sliderValue, setSliderValue] = useState(0);\n  const [timeframeValue, setTimeframeValue] = useState('15');\n  const [advanced, setAdvanced] = useState(false);\n  const [stopPrice, setStopPrice] = useState('');\n  const [postOnly, setPostOnly] = useState(false);\n  const [reduceOnly, setReduceOnly] = useState(false);\n  const [wsListeners, setWsListeners] = useState({\n    orderbook: null,\n    trades: null\n  });\n\n  // Generate some dummy data for development purposes\n  const generateMockData = () => {\n    // Mock symbols available\n    const symbols = [{\n      symbol: 'BTCUSDT',\n      baseAsset: 'BTC',\n      quoteAsset: 'USDT',\n      price: 59842.15\n    }, {\n      symbol: 'ETHUSDT',\n      baseAsset: 'ETH',\n      quoteAsset: 'USDT',\n      price: 3521.67\n    }, {\n      symbol: 'SOLUSDT',\n      baseAsset: 'SOL',\n      quoteAsset: 'USDT',\n      price: 128.45\n    }, {\n      symbol: 'ADAUSDT',\n      baseAsset: 'ADA',\n      quoteAsset: 'USDT',\n      price: 0.45\n    }, {\n      symbol: 'BNBUSDT',\n      baseAsset: 'BNB',\n      quoteAsset: 'USDT',\n      price: 615.20\n    }];\n\n    // Mock balances\n    const balances = {\n      'BTC': 0.12,\n      'ETH': 2.5,\n      'USDT': 15000,\n      'SOL': 25,\n      'ADA': 1000\n    };\n\n    // Mock order book - generate some realistic order book data\n    const generateOrderBook = () => {\n      const symbol = symbols.find(s => s.symbol === selectedSymbol);\n      if (!symbol) return {\n        asks: [],\n        bids: []\n      };\n      const basePrice = symbol.price;\n      const asks = [];\n      const bids = [];\n\n      // Generate some ask orders slightly above current price\n      for (let i = 1; i <= 15; i++) {\n        const price = basePrice + basePrice * 0.0001 * i;\n        const amount = Math.random() * 2 + 0.1;\n        asks.push([price.toFixed(2), amount.toFixed(6)]);\n      }\n\n      // Generate some bid orders slightly below current price\n      for (let i = 1; i <= 15; i++) {\n        const price = basePrice - basePrice * 0.0001 * i;\n        const amount = Math.random() * 2 + 0.1;\n        bids.push([price.toFixed(2), amount.toFixed(6)]);\n      }\n      return {\n        asks,\n        bids\n      };\n    };\n\n    // Mock open orders\n    const openOrders = [{\n      id: 'o123456',\n      symbol: 'BTCUSDT',\n      side: 'buy',\n      type: 'limit',\n      price: 58500,\n      amount: 0.05,\n      filled: 0,\n      status: 'open',\n      timestamp: Date.now() - 3600000\n    }, {\n      id: 'o123457',\n      symbol: 'ETHUSDT',\n      side: 'sell',\n      type: 'limit',\n      price: 3600,\n      amount: 1.2,\n      filled: 0,\n      status: 'open',\n      timestamp: Date.now() - 7200000\n    }];\n\n    // Mock order history\n    const orderHistory = [{\n      id: 'o123450',\n      symbol: 'BTCUSDT',\n      side: 'buy',\n      type: 'market',\n      price: 59120,\n      amount: 0.03,\n      filled: 0.03,\n      status: 'filled',\n      timestamp: Date.now() - 86400000\n    }, {\n      id: 'o123451',\n      symbol: 'ETHUSDT',\n      side: 'sell',\n      type: 'limit',\n      price: 3550,\n      amount: 0.5,\n      filled: 0.5,\n      status: 'filled',\n      timestamp: Date.now() - 172800000\n    }, {\n      id: 'o123452',\n      symbol: 'BTCUSDT',\n      side: 'buy',\n      type: 'limit',\n      price: 57800,\n      amount: 0.02,\n      filled: 0.02,\n      status: 'filled',\n      timestamp: Date.now() - 259200000\n    }];\n\n    // Mock recent trades\n    const generateRecentTrades = () => {\n      const symbol = symbols.find(s => s.symbol === selectedSymbol);\n      if (!symbol) return [];\n      const basePrice = symbol.price;\n      const trades = [];\n      for (let i = 0; i < 30; i++) {\n        const isBuy = Math.random() > 0.5;\n        const price = basePrice + basePrice * 0.0005 * (Math.random() - 0.5);\n        const amount = Math.random() * 0.5 + 0.01;\n        trades.push({\n          id: `t${Date.now() - i}`,\n          price: price.toFixed(2),\n          amount: amount.toFixed(6),\n          side: isBuy ? 'buy' : 'sell',\n          timestamp: Date.now() - i * 30000\n        });\n      }\n      return trades;\n    };\n    return {\n      symbols,\n      balances,\n      orderBook: generateOrderBook(),\n      openOrders,\n      orderHistory,\n      recentTrades: generateRecentTrades()\n    };\n  };\n\n  // Connect to WebSockets for real-time data\n  const connectToWebSockets = async symbol => {\n    try {\n      // Connect to orderbook WebSocket\n      await WebSocketService.connect('orderbook');\n\n      // Listen for orderbook updates\n      const orderbookListenerId = WebSocketService.addListener('orderbook', data => {\n        if (data.symbol === symbol) {\n          setOrderBook({\n            asks: data.data.asks,\n            bids: data.data.bids\n          });\n        }\n      });\n\n      // Connect to trades WebSocket\n      await WebSocketService.connect('trades');\n\n      // Listen for trade updates\n      const tradesListenerId = WebSocketService.addListener('trades', data => {\n        // Prepend new trades to the existing ones and limit to 30\n        setRecentTrades(prevTrades => {\n          if (Array.isArray(data.data)) {\n            return [...data.data, ...prevTrades].slice(0, 30);\n          } else if (data.data) {\n            return [data.data, ...prevTrades].slice(0, 30);\n          }\n          return prevTrades;\n        });\n      });\n\n      // Store listener IDs for cleanup\n      return {\n        orderbookListenerId,\n        tradesListenerId\n      };\n    } catch (error) {\n      console.error('Failed to connect to WebSockets:', error);\n      setError('Real-time data connection failed. Using fallback data.');\n      return null;\n    }\n  };\n\n  // Fetch data on component mount\n  useEffect(() => {\n    let websocketListeners = null;\n    const fetchTradingData = async () => {\n      try {\n        setIsLoading(true);\n        setError('');\n\n        // Fetch user exchanges\n        const userExchanges = await ExchangeService.getUserExchanges();\n        setExchanges(userExchanges || []);\n\n        // If we have exchanges, select the first one\n        if (userExchanges && userExchanges.length > 0) {\n          setSelectedExchange(userExchanges[0].id);\n\n          // In a real app, you would fetch these from the exchange API\n          // For now, using mock data\n          const mockData = generateMockData();\n          setAvailableSymbols(mockData.symbols);\n          setBalances(mockData.balances);\n          setOrderBook(mockData.orderBook);\n          setOpenOrders(mockData.openOrders);\n          setOrderHistory(mockData.orderHistory);\n          setRecentTrades(mockData.recentTrades);\n\n          // Set initial price\n          const currentSymbol = mockData.symbols.find(s => s.symbol === selectedSymbol);\n          if (currentSymbol) {\n            setPrice(currentSymbol.price.toString());\n          }\n\n          // Connect to WebSocket for real-time data\n          websocketListeners = await connectToWebSockets(selectedSymbol);\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch trading data:\", err);\n        setError(err.message || 'Failed to load trading data');\n\n        // For demo purposes, use mock data\n        const mockData = generateMockData();\n        setAvailableSymbols(mockData.symbols);\n        setBalances(mockData.balances);\n        setOrderBook(mockData.orderBook);\n        setOpenOrders(mockData.openOrders);\n        setOrderHistory(mockData.orderHistory);\n        setRecentTrades(mockData.recentTrades);\n\n        // Even if initial API call fails, try to connect to WebSockets\n        websocketListeners = await connectToWebSockets(selectedSymbol);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTradingData();\n\n    // Cleanup function to disconnect WebSockets and remove listeners\n    return () => {\n      if (websocketListeners) {\n        if (websocketListeners.orderbookListenerId) {\n          WebSocketService.removeListener('orderbook', websocketListeners.orderbookListenerId);\n        }\n        if (websocketListeners.tradesListenerId) {\n          WebSocketService.removeListener('trades', websocketListeners.tradesListenerId);\n        }\n      }\n      WebSocketService.disconnect('orderbook');\n      WebSocketService.disconnect('trades');\n    };\n  }, [selectedSymbol]); // Re-run if selected symbol changes\n\n  // Update order total when price or amount changes\n  useEffect(() => {\n    if (price && amount) {\n      setOrderTotal(parseFloat(price) * parseFloat(amount));\n    } else {\n      setOrderTotal(0);\n    }\n  }, [price, amount]);\n\n  // Update order book when symbol changes\n  useEffect(() => {\n    if (selectedSymbol) {\n      // In a real app, you would fetch the order book from the exchange API\n      // For now, using mock data\n      const mockData = generateMockData();\n      setOrderBook(mockData.orderBook);\n      setRecentTrades(mockData.recentTrades);\n\n      // Set initial price\n      const currentSymbol = mockData.symbols.find(s => s.symbol === selectedSymbol);\n      if (currentSymbol) {\n        setPrice(currentSymbol.price.toString());\n      }\n    }\n  }, [selectedSymbol]);\n\n  // Handle symbol change\n  const handleSymbolChange = event => {\n    setSelectedSymbol(event.target.value);\n  };\n\n  // Handle order type change\n  const handleOrderTypeChange = event => {\n    setOrderType(event.target.value);\n  };\n\n  // Handle trade tab change\n  const handleTradeTabChange = (_, newValue) => {\n    if (newValue !== null) {\n      setTradeTab(newValue);\n    }\n  };\n\n  // Handle timeframe change for chart\n  const handleTimeframeChange = (_, newValue) => {\n    if (newValue !== null) {\n      setTimeframeValue(newValue);\n    }\n  };\n\n  // Handle slider change for order amount\n  const handleSliderChange = (_, newValue) => {\n    setSliderValue(newValue);\n\n    // Calculate amount based on slider percentage\n    if (tradeTab === 'buy') {\n      const availableUSDT = balances['USDT'] || 0;\n      const maxAmount = availableUSDT / parseFloat(price || 1);\n      const newAmount = (maxAmount * newValue / 100).toFixed(6);\n      setAmount(newAmount);\n    } else {\n      const symbol = availableSymbols.find(s => s.symbol === selectedSymbol);\n      if (symbol) {\n        const availableCrypto = balances[symbol.baseAsset] || 0;\n        const newAmount = (availableCrypto * newValue / 100).toFixed(6);\n        setAmount(newAmount);\n      }\n    }\n  };\n\n  // Handle order submission\n  const handleSubmitOrder = async () => {\n    if (!selectedExchange || !selectedSymbol || !price || !amount) {\n      setError('Please fill all required fields');\n      return;\n    }\n    try {\n      setIsLoading(true);\n\n      // In a real app, you would submit the order to the exchange API\n      // For now, just simulate a successful order\n      const orderData = {\n        symbol: selectedSymbol,\n        side: tradeTab,\n        type: orderType,\n        price: orderType === 'market' ? undefined : parseFloat(price),\n        amount: parseFloat(amount),\n        stopPrice: orderType === 'stop_limit' ? parseFloat(stopPrice) : undefined,\n        postOnly,\n        reduceOnly\n      };\n\n      // In a real app: await ExchangeService.placeOrder(selectedExchange, orderData);\n\n      // Simulate success\n      alert(`Order placed: ${tradeTab} ${amount} ${selectedSymbol} at ${orderType === 'market' ? 'market price' : price}`);\n\n      // Clear the form\n      setAmount('');\n      setSliderValue(0);\n\n      // Refresh open orders (in a real app, you would fetch the updated list)\n      const mockOrder = {\n        id: `o${Date.now()}`,\n        symbol: selectedSymbol,\n        side: tradeTab,\n        type: orderType,\n        price: parseFloat(price),\n        amount: parseFloat(amount),\n        filled: 0,\n        status: 'open',\n        timestamp: Date.now()\n      };\n      setOpenOrders([mockOrder, ...openOrders]);\n    } catch (err) {\n      console.error(\"Failed to place order:\", err);\n      setError(err.message || 'Failed to place order');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle order cancellation\n  const handleCancelOrder = async orderId => {\n    try {\n      // In a real app, you would cancel the order with the exchange API\n      // For now, just simulate a successful cancellation\n\n      // Remove the order from the list\n      setOpenOrders(openOrders.filter(order => order.id !== orderId));\n    } catch (err) {\n      console.error(\"Failed to cancel order:\", err);\n      setError(err.message || 'Failed to cancel order');\n    }\n  };\n\n  // Extract base and quote assets from the selected symbol\n  const currentSymbol = availableSymbols.find(s => s.symbol === selectedSymbol);\n  const baseAsset = (currentSymbol === null || currentSymbol === void 0 ? void 0 : currentSymbol.baseAsset) || 'BTC';\n  const quoteAsset = (currentSymbol === null || currentSymbol === void 0 ? void 0 : currentSymbol.quoteAsset) || 'USDT';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Trading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          flexWrap: 'wrap',\n          mt: {\n            xs: 2,\n            sm: 0\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          size: \"small\",\n          sx: {\n            minWidth: 150\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Exchange\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedExchange,\n            label: \"Exchange\",\n            onChange: e => setSelectedExchange(e.target.value),\n            children: exchanges.map(exchange => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: exchange.id,\n              children: exchange.label || exchange.exchangeName\n            }, exchange.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          size: \"small\",\n          sx: {\n            minWidth: 150\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: selectedSymbol,\n            label: \"Symbol\",\n            onChange: handleSymbolChange,\n            children: availableSymbols.map(symbol => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: symbol.symbol,\n              children: [symbol.baseAsset, \"/\", symbol.quoteAsset]\n            }, symbol.symbol, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 9,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2,\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [baseAsset, \"/\", quoteAsset]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                value: timeframeValue,\n                exclusive: true,\n                onChange: handleTimeframeChange,\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                  value: \"1\",\n                  children: \"1m\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  value: \"5\",\n                  children: \"5m\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  value: \"15\",\n                  children: \"15m\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  value: \"60\",\n                  children: \"1h\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  value: \"D\",\n                  children: \"1d\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TradingViewChart, {\n            symbol: selectedSymbol,\n            exchange: \"BINANCE\" // Or dynamically select based on the exchange\n            ,\n            interval: timeframeValue,\n            height: 500\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 2,\n                height: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Open Orders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 17\n              }, this), openOrders.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  textAlign: 'center',\n                  py: 3\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"No open orders\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n                sx: {\n                  maxHeight: 200\n                },\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  stickyHeader: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Symbol\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 561,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 562,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: \"Price\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 563,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: \"Amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 564,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: \"Filled\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 565,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Action\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 566,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: openOrders.map(order => /*#__PURE__*/_jsxDEV(TableRow, {\n                      hover: true,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: order.symbol\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 573,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"caption\",\n                          color: order.side === 'buy' ? 'success.main' : 'error.main',\n                          children: order.side.toUpperCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 574,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 572,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: order.type.toUpperCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 581,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: order.price.toLocaleString(undefined, {\n                          minimumFractionDigits: 2,\n                          maximumFractionDigits: 2\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 582,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: order.amount.toLocaleString(undefined, {\n                          minimumFractionDigits: 6,\n                          maximumFractionDigits: 6\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 588,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: order.filled.toLocaleString(undefined, {\n                          minimumFractionDigits: 6,\n                          maximumFractionDigits: 6\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          size: \"small\",\n                          color: \"error\",\n                          onClick: () => handleCancelOrder(order.id),\n                          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 606,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 601,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 600,\n                        columnNumber: 29\n                      }, this)]\n                    }, order.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 2,\n                height: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Order History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 17\n              }, this), orderHistory.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  textAlign: 'center',\n                  py: 3\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"No order history\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n                sx: {\n                  maxHeight: 200\n                },\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  stickyHeader: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Symbol\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 636,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 637,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: \"Price\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 638,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: \"Amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 639,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 640,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Date\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 641,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 635,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: orderHistory.map(order => /*#__PURE__*/_jsxDEV(TableRow, {\n                      hover: true,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: order.symbol\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 648,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"caption\",\n                          color: order.side === 'buy' ? 'success.main' : 'error.main',\n                          children: order.side.toUpperCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 649,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 647,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: order.type.toUpperCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 656,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: order.price.toLocaleString(undefined, {\n                          minimumFractionDigits: 2,\n                          maximumFractionDigits: 2\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 657,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: order.filled.toLocaleString(undefined, {\n                          minimumFractionDigits: 6,\n                          maximumFractionDigits: 6\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 663,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Chip, {\n                          label: order.status.toUpperCase(),\n                          size: \"small\",\n                          color: order.status === 'filled' ? 'success' : 'default',\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 670,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 669,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: new Date(order.timestamp).toLocaleDateString()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 677,\n                        columnNumber: 29\n                      }, this)]\n                    }, order.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  size: \"small\",\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    children: \"Order Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    value: orderType,\n                    label: \"Order Type\",\n                    onChange: handleOrderTypeChange,\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"limit\",\n                      children: \"Limit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 703,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"market\",\n                      children: \"Market\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 704,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"stop_limit\",\n                      children: \"Stop Limit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 705,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 698,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                value: tradeTab,\n                exclusive: true,\n                onChange: handleTradeTabChange,\n                fullWidth: true,\n                color: tradeTab === 'buy' ? 'success' : 'error',\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                  value: \"buy\",\n                  sx: {\n                    py: 1\n                  },\n                  children: [\"Buy \", baseAsset]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  value: \"sell\",\n                  sx: {\n                    py: 1\n                  },\n                  children: [\"Sell \", baseAsset]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 17\n              }, this), orderType !== 'market' && /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Price\",\n                type: \"number\",\n                fullWidth: true,\n                value: price,\n                onChange: e => setPrice(e.target.value),\n                variant: \"outlined\",\n                size: \"small\",\n                sx: {\n                  mb: 2\n                },\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: quoteAsset\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 37\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 19\n              }, this), orderType === 'stop_limit' && /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Stop Price\",\n                type: \"number\",\n                fullWidth: true,\n                value: stopPrice,\n                onChange: e => setStopPrice(e.target.value),\n                variant: \"outlined\",\n                size: \"small\",\n                sx: {\n                  mb: 2\n                },\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: quoteAsset\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 37\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Amount\",\n                type: \"number\",\n                fullWidth: true,\n                value: amount,\n                onChange: e => setAmount(e.target.value),\n                variant: \"outlined\",\n                size: \"small\",\n                sx: {\n                  mb: 2\n                },\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: baseAsset\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 768,\n                    columnNumber: 35\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  px: 1,\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Slider, {\n                  value: sliderValue,\n                  onChange: handleSliderChange,\n                  valueLabelDisplay: \"auto\",\n                  valueLabelFormat: value => `${value}%`,\n                  marks: [{\n                    value: 0,\n                    label: '0%'\n                  }, {\n                    value: 25,\n                    label: '25%'\n                  }, {\n                    value: 50,\n                    label: '50%'\n                  }, {\n                    value: 75,\n                    label: '75%'\n                  }, {\n                    value: 100,\n                    label: '100%'\n                  }]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 17\n              }, this), orderTotal > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                align: \"right\",\n                sx: {\n                  mb: 2\n                },\n                children: [\"Total: \", orderTotal.toLocaleString(undefined, {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                }), \" \", quoteAsset]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  fullWidth: true,\n                  size: \"large\",\n                  onClick: handleSubmitOrder,\n                  disabled: isLoading || !price || !amount,\n                  color: tradeTab === 'buy' ? 'success' : 'error',\n                  children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 24,\n                    color: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 807,\n                    columnNumber: 23\n                  }, this) : tradeTab === 'buy' ? `Buy ${baseAsset}` : `Sell ${baseAsset}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"Available:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: tradeTab === 'buy' ? `${(balances[quoteAsset] || 0).toLocaleString()} ${quoteAsset}` : `${(balances[baseAsset] || 0).toLocaleString()} ${baseAsset}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 820,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"Advanced\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 831,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                  size: \"small\",\n                  checked: advanced,\n                  onChange: e => setAdvanced(e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 834,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 17\n              }, this), advanced && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    size: \"small\",\n                    checked: postOnly,\n                    onChange: e => setPostOnly(e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 845,\n                    columnNumber: 25\n                  }, this),\n                  label: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Post Only\", /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Order will only be placed if it would be posted to the order book as a maker order\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        size: \"small\",\n                        children: /*#__PURE__*/_jsxDEV(SettingsIcon, {\n                          fontSize: \"inherit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 856,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 855,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 854,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 852,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 843,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Switch, {\n                    size: \"small\",\n                    checked: reduceOnly,\n                    onChange: e => setReduceOnly(e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 865,\n                    columnNumber: 25\n                  }, this),\n                  label: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Reduce Only\", /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Order will only reduce your position, not increase it\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        size: \"small\",\n                        children: /*#__PURE__*/_jsxDEV(SettingsIcon, {\n                          fontSize: \"inherit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 876,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 875,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 874,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 872,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 863,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(OrderBookVisualization, {\n              asks: orderBook.asks,\n              bids: orderBook.bids,\n              baseAsset: baseAsset,\n              quoteAsset: quoteAsset,\n              isLoading: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Recent Trades\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 902,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                sx: {\n                  maxHeight: 200\n                },\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  stickyHeader: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Price\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 908,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: \"Amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 909,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: \"Time\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 910,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 907,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 906,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: recentTrades.map(trade => /*#__PURE__*/_jsxDEV(TableRow, {\n                      hover: true,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        sx: {\n                          color: trade.side === 'buy' ? 'success.main' : 'error.main'\n                        },\n                        children: parseFloat(trade.price).toLocaleString(undefined, {\n                          minimumFractionDigits: 2,\n                          maximumFractionDigits: 2\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 916,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: parseFloat(trade.amount).toLocaleString(undefined, {\n                          minimumFractionDigits: 6,\n                          maximumFractionDigits: 6\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 922,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: new Date(trade.timestamp).toLocaleTimeString()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 928,\n                        columnNumber: 27\n                      }, this)]\n                    }, trade.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 915,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 913,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 905,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 904,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 465,\n    columnNumber: 5\n  }, this);\n};\n_s2(TradingInterface, \"MqUXRJksnBvd6WS9YalpT4dF2sA=\", false, function () {\n  return [useTheme];\n});\n_c2 = TradingInterface;\nexport default TradingInterface;\nvar _c, _c2;\n$RefreshReg$(_c, \"Sparkline\");\n$RefreshReg$(_c2, \"TradingInterface\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Grid","Typography","Divider","FormControl","InputLabel","Select","MenuItem","TextField","Button","Tabs","Tab","InputAdornment","Slider","Switch","FormControlLabel","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","CircularProgress","Chip","IconButton","Tooltip","ButtonGroup","ToggleButtonGroup","ToggleButton","useTheme","Timeline","TimelineIcon","SwapHoriz","SwapIcon","KeyboardArrowDown","ArrowDownIcon","KeyboardArrowUp","ArrowUpIcon","Close","CloseIcon","Settings","SettingsIcon","Check","CheckIcon","Warning","WarningIcon","Star","StarIcon","StarBorder","StarBorderIcon","TradingViewChart","OrderBookVisualization","ExchangeService","WebSocketService","TradingService","jsxDEV","_jsxDEV","Fragment","_Fragment","Sparkline","data","isPositive","width","height","_s","theme","length","sx","fileName","_jsxFileName","lineNumber","columnNumber","values","map","d","value","min","Math","max","range","points","i","x","y","path","join","children","fill","stroke","palette","success","main","error","strokeWidth","_c","TradingInterface","_s2","isLoading","setIsLoading","setError","exchanges","setExchanges","selectedExchange","setSelectedExchange","selectedSymbol","setSelectedSymbol","availableSymbols","setAvailableSymbols","orderType","setOrderType","tradeTab","setTradeTab","price","setPrice","amount","setAmount","orderTotal","setOrderTotal","openOrders","setOpenOrders","orderHistory","setOrderHistory","balances","setBalances","orderBook","setOrderBook","asks","bids","recentTrades","setRecentTrades","sliderValue","setSliderValue","timeframeValue","setTimeframeValue","advanced","setAdvanced","stopPrice","setStopPrice","postOnly","setPostOnly","reduceOnly","setReduceOnly","wsListeners","setWsListeners","orderbook","trades","generateMockData","symbols","symbol","baseAsset","quoteAsset","generateOrderBook","find","s","basePrice","random","push","toFixed","id","side","type","filled","status","timestamp","Date","now","generateRecentTrades","isBuy","connectToWebSockets","connect","orderbookListenerId","addListener","tradesListenerId","prevTrades","Array","isArray","slice","console","websocketListeners","fetchTradingData","userExchanges","getUserExchanges","mockData","currentSymbol","toString","err","message","removeListener","disconnect","parseFloat","handleSymbolChange","event","target","handleOrderTypeChange","handleTradeTabChange","_","newValue","handleTimeframeChange","handleSliderChange","availableUSDT","maxAmount","newAmount","availableCrypto","handleSubmitOrder","orderData","undefined","alert","mockOrder","handleCancelOrder","orderId","filter","order","mb","display","justifyContent","alignItems","flexWrap","variant","component","gap","mt","xs","sm","size","minWidth","label","onChange","e","exchange","exchangeName","color","container","spacing","item","lg","p","exclusive","interval","gutterBottom","textAlign","py","maxHeight","stickyHeader","align","hover","toUpperCase","toLocaleString","minimumFractionDigits","maximumFractionDigits","onClick","fontSize","toLocaleDateString","fullWidth","InputProps","endAdornment","position","px","valueLabelDisplay","valueLabelFormat","marks","disabled","my","checked","control","title","trade","toLocaleTimeString","_c2","$RefreshReg$"],"sources":["/Users/antenehtessema/Desktop/botsalgo/web_dashboard/src/components/Trading/TradingInterface.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Grid,\n  Typography,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  Button,\n  Tabs,\n  Tab,\n  InputAdornment,\n  Slider,\n  Switch,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  CircularProgress,\n  Chip,\n  IconButton,\n  Tooltip,\n  ButtonGroup,\n  ToggleButtonGroup,\n  ToggleButton,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Timeline as TimelineIcon,\n  SwapHoriz as SwapIcon,\n  KeyboardArrowDown as ArrowDownIcon,\n  KeyboardArrowUp as ArrowUpIcon,\n  Close as CloseIcon,\n  Settings as SettingsIcon,\n  Check as CheckIcon,\n  Warning as WarningIcon,\n  Star as StarIcon,\n  StarBorder as StarBorderIcon,\n} from '@mui/icons-material';\nimport TradingViewChart from '../Charts/TradingViewChart';\nimport OrderBookVisualization from './OrderBookVisualization';\nimport ExchangeService from '../../services/ExchangeService';\nimport WebSocketService from '../../services/WebSocketService';\nimport TradingService from '../../services/TradingService';\n\n// Sparkline mini chart component\nconst Sparkline = ({ data = [], isPositive = true, width = 60, height = 20 }) => {\n  const theme = useTheme();\n  \n  if (!data || data.length === 0) {\n    return <Box sx={{ width, height }}></Box>;\n  }\n  \n  const values = data.map(d => d.value);\n  const min = Math.min(...values);\n  const max = Math.max(...values);\n  const range = max - min || 1;\n\n  const points = data.map((d, i) => {\n    const x = (i / (data.length - 1)) * width;\n    const y = height - ((d.value - min) / range) * height;\n    return `${x},${y}`;\n  });\n\n  const path = `M${points.join(' L')}`;\n\n  return (\n    <svg width={width} height={height}>\n      <path\n        d={path}\n        fill=\"none\"\n        stroke={isPositive ? theme.palette.success.main : theme.palette.error.main}\n        strokeWidth={1.5}\n      />\n    </svg>\n  );\n};\n\nconst TradingInterface = () => {\n  const theme = useTheme();\n  \n  // State for trading interface\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [exchanges, setExchanges] = useState([]);\n  const [selectedExchange, setSelectedExchange] = useState('');\n  const [selectedSymbol, setSelectedSymbol] = useState('BTCUSDT');\n  const [availableSymbols, setAvailableSymbols] = useState([]);\n  const [orderType, setOrderType] = useState('limit');\n  const [tradeTab, setTradeTab] = useState('buy');\n  const [price, setPrice] = useState('');\n  const [amount, setAmount] = useState('');\n  const [orderTotal, setOrderTotal] = useState(0);\n  const [openOrders, setOpenOrders] = useState([]);\n  const [orderHistory, setOrderHistory] = useState([]);\n  const [balances, setBalances] = useState({});\n  const [orderBook, setOrderBook] = useState({ asks: [], bids: [] });\n  const [recentTrades, setRecentTrades] = useState([]);\n  const [sliderValue, setSliderValue] = useState(0);\n  const [timeframeValue, setTimeframeValue] = useState('15');\n  const [advanced, setAdvanced] = useState(false);\n  const [stopPrice, setStopPrice] = useState('');\n  const [postOnly, setPostOnly] = useState(false);\n  const [reduceOnly, setReduceOnly] = useState(false);\n  const [wsListeners, setWsListeners] = useState({\n    orderbook: null,\n    trades: null\n  });\n  \n  // Generate some dummy data for development purposes\n  const generateMockData = () => {\n    // Mock symbols available\n    const symbols = [\n      { symbol: 'BTCUSDT', baseAsset: 'BTC', quoteAsset: 'USDT', price: 59842.15 },\n      { symbol: 'ETHUSDT', baseAsset: 'ETH', quoteAsset: 'USDT', price: 3521.67 },\n      { symbol: 'SOLUSDT', baseAsset: 'SOL', quoteAsset: 'USDT', price: 128.45 },\n      { symbol: 'ADAUSDT', baseAsset: 'ADA', quoteAsset: 'USDT', price: 0.45 },\n      { symbol: 'BNBUSDT', baseAsset: 'BNB', quoteAsset: 'USDT', price: 615.20 },\n    ];\n    \n    // Mock balances\n    const balances = {\n      'BTC': 0.12,\n      'ETH': 2.5,\n      'USDT': 15000,\n      'SOL': 25,\n      'ADA': 1000,\n    };\n    \n    // Mock order book - generate some realistic order book data\n    const generateOrderBook = () => {\n      const symbol = symbols.find(s => s.symbol === selectedSymbol);\n      if (!symbol) return { asks: [], bids: [] };\n      \n      const basePrice = symbol.price;\n      const asks = [];\n      const bids = [];\n      \n      // Generate some ask orders slightly above current price\n      for (let i = 1; i <= 15; i++) {\n        const price = basePrice + (basePrice * 0.0001 * i);\n        const amount = Math.random() * 2 + 0.1;\n        asks.push([price.toFixed(2), amount.toFixed(6)]);\n      }\n      \n      // Generate some bid orders slightly below current price\n      for (let i = 1; i <= 15; i++) {\n        const price = basePrice - (basePrice * 0.0001 * i);\n        const amount = Math.random() * 2 + 0.1;\n        bids.push([price.toFixed(2), amount.toFixed(6)]);\n      }\n      \n      return { asks, bids };\n    };\n    \n    // Mock open orders\n    const openOrders = [\n      { id: 'o123456', symbol: 'BTCUSDT', side: 'buy', type: 'limit', price: 58500, amount: 0.05, filled: 0, status: 'open', timestamp: Date.now() - 3600000 },\n      { id: 'o123457', symbol: 'ETHUSDT', side: 'sell', type: 'limit', price: 3600, amount: 1.2, filled: 0, status: 'open', timestamp: Date.now() - 7200000 },\n    ];\n    \n    // Mock order history\n    const orderHistory = [\n      { id: 'o123450', symbol: 'BTCUSDT', side: 'buy', type: 'market', price: 59120, amount: 0.03, filled: 0.03, status: 'filled', timestamp: Date.now() - 86400000 },\n      { id: 'o123451', symbol: 'ETHUSDT', side: 'sell', type: 'limit', price: 3550, amount: 0.5, filled: 0.5, status: 'filled', timestamp: Date.now() - 172800000 },\n      { id: 'o123452', symbol: 'BTCUSDT', side: 'buy', type: 'limit', price: 57800, amount: 0.02, filled: 0.02, status: 'filled', timestamp: Date.now() - 259200000 },\n    ];\n    \n    // Mock recent trades\n    const generateRecentTrades = () => {\n      const symbol = symbols.find(s => s.symbol === selectedSymbol);\n      if (!symbol) return [];\n      \n      const basePrice = symbol.price;\n      const trades = [];\n      \n      for (let i = 0; i < 30; i++) {\n        const isBuy = Math.random() > 0.5;\n        const price = basePrice + (basePrice * 0.0005 * (Math.random() - 0.5));\n        const amount = Math.random() * 0.5 + 0.01;\n        \n        trades.push({\n          id: `t${Date.now() - i}`,\n          price: price.toFixed(2),\n          amount: amount.toFixed(6),\n          side: isBuy ? 'buy' : 'sell',\n          timestamp: Date.now() - i * 30000,\n        });\n      }\n      \n      return trades;\n    };\n    \n    return { symbols, balances, orderBook: generateOrderBook(), openOrders, orderHistory, recentTrades: generateRecentTrades() };\n  };\n  \n  // Connect to WebSockets for real-time data\n  const connectToWebSockets = async (symbol) => {\n    try {\n      // Connect to orderbook WebSocket\n      await WebSocketService.connect('orderbook');\n      \n      // Listen for orderbook updates\n      const orderbookListenerId = WebSocketService.addListener('orderbook', (data) => {\n        if (data.symbol === symbol) {\n          setOrderBook({\n            asks: data.data.asks,\n            bids: data.data.bids\n          });\n        }\n      });\n      \n      // Connect to trades WebSocket\n      await WebSocketService.connect('trades');\n      \n      // Listen for trade updates\n      const tradesListenerId = WebSocketService.addListener('trades', (data) => {\n        // Prepend new trades to the existing ones and limit to 30\n        setRecentTrades(prevTrades => {\n          if (Array.isArray(data.data)) {\n            return [...data.data, ...prevTrades].slice(0, 30);\n          } else if (data.data) {\n            return [data.data, ...prevTrades].slice(0, 30);\n          }\n          return prevTrades;\n        });\n      });\n      \n      // Store listener IDs for cleanup\n      return { orderbookListenerId, tradesListenerId };\n    } catch (error) {\n      console.error('Failed to connect to WebSockets:', error);\n      setError('Real-time data connection failed. Using fallback data.');\n      return null;\n    }\n  };\n\n  // Fetch data on component mount\n  useEffect(() => {\n    let websocketListeners = null;\n    \n    const fetchTradingData = async () => {\n      try {\n        setIsLoading(true);\n        setError('');\n        \n        // Fetch user exchanges\n        const userExchanges = await ExchangeService.getUserExchanges();\n        setExchanges(userExchanges || []);\n        \n        // If we have exchanges, select the first one\n        if (userExchanges && userExchanges.length > 0) {\n          setSelectedExchange(userExchanges[0].id);\n          \n          // In a real app, you would fetch these from the exchange API\n          // For now, using mock data\n          const mockData = generateMockData();\n          setAvailableSymbols(mockData.symbols);\n          setBalances(mockData.balances);\n          setOrderBook(mockData.orderBook);\n          setOpenOrders(mockData.openOrders);\n          setOrderHistory(mockData.orderHistory);\n          setRecentTrades(mockData.recentTrades);\n          \n          // Set initial price\n          const currentSymbol = mockData.symbols.find(s => s.symbol === selectedSymbol);\n          if (currentSymbol) {\n            setPrice(currentSymbol.price.toString());\n          }\n          \n          // Connect to WebSocket for real-time data\n          websocketListeners = await connectToWebSockets(selectedSymbol);\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch trading data:\", err);\n        setError(err.message || 'Failed to load trading data');\n        \n        // For demo purposes, use mock data\n        const mockData = generateMockData();\n        setAvailableSymbols(mockData.symbols);\n        setBalances(mockData.balances);\n        setOrderBook(mockData.orderBook);\n        setOpenOrders(mockData.openOrders);\n        setOrderHistory(mockData.orderHistory);\n        setRecentTrades(mockData.recentTrades);\n        \n        // Even if initial API call fails, try to connect to WebSockets\n        websocketListeners = await connectToWebSockets(selectedSymbol);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchTradingData();\n    \n    // Cleanup function to disconnect WebSockets and remove listeners\n    return () => {\n      if (websocketListeners) {\n        if (websocketListeners.orderbookListenerId) {\n          WebSocketService.removeListener('orderbook', websocketListeners.orderbookListenerId);\n        }\n        if (websocketListeners.tradesListenerId) {\n          WebSocketService.removeListener('trades', websocketListeners.tradesListenerId);\n        }\n      }\n      \n      WebSocketService.disconnect('orderbook');\n      WebSocketService.disconnect('trades');\n    };\n  }, [selectedSymbol]); // Re-run if selected symbol changes\n  \n  // Update order total when price or amount changes\n  useEffect(() => {\n    if (price && amount) {\n      setOrderTotal(parseFloat(price) * parseFloat(amount));\n    } else {\n      setOrderTotal(0);\n    }\n  }, [price, amount]);\n  \n  // Update order book when symbol changes\n  useEffect(() => {\n    if (selectedSymbol) {\n      // In a real app, you would fetch the order book from the exchange API\n      // For now, using mock data\n      const mockData = generateMockData();\n      setOrderBook(mockData.orderBook);\n      setRecentTrades(mockData.recentTrades);\n      \n      // Set initial price\n      const currentSymbol = mockData.symbols.find(s => s.symbol === selectedSymbol);\n      if (currentSymbol) {\n        setPrice(currentSymbol.price.toString());\n      }\n    }\n  }, [selectedSymbol]);\n\n  // Handle symbol change\n  const handleSymbolChange = (event) => {\n    setSelectedSymbol(event.target.value);\n  };\n  \n  // Handle order type change\n  const handleOrderTypeChange = (event) => {\n    setOrderType(event.target.value);\n  };\n  \n  // Handle trade tab change\n  const handleTradeTabChange = (_, newValue) => {\n    if (newValue !== null) {\n      setTradeTab(newValue);\n    }\n  };\n  \n  // Handle timeframe change for chart\n  const handleTimeframeChange = (_, newValue) => {\n    if (newValue !== null) {\n      setTimeframeValue(newValue);\n    }\n  };\n  \n  // Handle slider change for order amount\n  const handleSliderChange = (_, newValue) => {\n    setSliderValue(newValue);\n    \n    // Calculate amount based on slider percentage\n    if (tradeTab === 'buy') {\n      const availableUSDT = balances['USDT'] || 0;\n      const maxAmount = availableUSDT / parseFloat(price || 1);\n      const newAmount = (maxAmount * newValue / 100).toFixed(6);\n      setAmount(newAmount);\n    } else {\n      const symbol = availableSymbols.find(s => s.symbol === selectedSymbol);\n      if (symbol) {\n        const availableCrypto = balances[symbol.baseAsset] || 0;\n        const newAmount = (availableCrypto * newValue / 100).toFixed(6);\n        setAmount(newAmount);\n      }\n    }\n  };\n  \n  // Handle order submission\n  const handleSubmitOrder = async () => {\n    if (!selectedExchange || !selectedSymbol || !price || !amount) {\n      setError('Please fill all required fields');\n      return;\n    }\n    \n    try {\n      setIsLoading(true);\n      \n      // In a real app, you would submit the order to the exchange API\n      // For now, just simulate a successful order\n      const orderData = {\n        symbol: selectedSymbol,\n        side: tradeTab,\n        type: orderType,\n        price: orderType === 'market' ? undefined : parseFloat(price),\n        amount: parseFloat(amount),\n        stopPrice: orderType === 'stop_limit' ? parseFloat(stopPrice) : undefined,\n        postOnly,\n        reduceOnly,\n      };\n      \n      // In a real app: await ExchangeService.placeOrder(selectedExchange, orderData);\n      \n      // Simulate success\n      alert(`Order placed: ${tradeTab} ${amount} ${selectedSymbol} at ${orderType === 'market' ? 'market price' : price}`);\n      \n      // Clear the form\n      setAmount('');\n      setSliderValue(0);\n      \n      // Refresh open orders (in a real app, you would fetch the updated list)\n      const mockOrder = {\n        id: `o${Date.now()}`,\n        symbol: selectedSymbol,\n        side: tradeTab,\n        type: orderType,\n        price: parseFloat(price),\n        amount: parseFloat(amount),\n        filled: 0,\n        status: 'open',\n        timestamp: Date.now(),\n      };\n      \n      setOpenOrders([mockOrder, ...openOrders]);\n      \n    } catch (err) {\n      console.error(\"Failed to place order:\", err);\n      setError(err.message || 'Failed to place order');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Handle order cancellation\n  const handleCancelOrder = async (orderId) => {\n    try {\n      // In a real app, you would cancel the order with the exchange API\n      // For now, just simulate a successful cancellation\n      \n      // Remove the order from the list\n      setOpenOrders(openOrders.filter(order => order.id !== orderId));\n      \n    } catch (err) {\n      console.error(\"Failed to cancel order:\", err);\n      setError(err.message || 'Failed to cancel order');\n    }\n  };\n  \n  // Extract base and quote assets from the selected symbol\n  const currentSymbol = availableSymbols.find(s => s.symbol === selectedSymbol);\n  const baseAsset = currentSymbol?.baseAsset || 'BTC';\n  const quoteAsset = currentSymbol?.quoteAsset || 'USDT';\n  \n  return (\n    <Box>\n      <Box sx={{ mb: 3, display: 'flex', justifyContent: 'space-between', alignItems: 'center', flexWrap: 'wrap' }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Trading\n        </Typography>\n        \n        <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', mt: { xs: 2, sm: 0 } }}>\n          <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n            <InputLabel>Exchange</InputLabel>\n            <Select\n              value={selectedExchange}\n              label=\"Exchange\"\n              onChange={(e) => setSelectedExchange(e.target.value)}\n            >\n              {exchanges.map((exchange) => (\n                <MenuItem key={exchange.id} value={exchange.id}>\n                  {exchange.label || exchange.exchangeName}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          \n          <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n            <InputLabel>Symbol</InputLabel>\n            <Select\n              value={selectedSymbol}\n              label=\"Symbol\"\n              onChange={handleSymbolChange}\n            >\n              {availableSymbols.map((symbol) => (\n                <MenuItem key={symbol.symbol} value={symbol.symbol}>\n                  {symbol.baseAsset}/{symbol.quoteAsset}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n      </Box>\n      \n      {error && (\n        <Typography color=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Typography>\n      )}\n      \n      <Grid container spacing={2}>\n        <Grid item xs={12} lg={9}>\n          <Paper sx={{ p: 2, mb: 2 }}>\n            <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <Typography variant=\"h6\">\n                {baseAsset}/{quoteAsset}\n              </Typography>\n              \n              <Box>\n                <ToggleButtonGroup\n                  value={timeframeValue}\n                  exclusive\n                  onChange={handleTimeframeChange}\n                  size=\"small\"\n                >\n                  <ToggleButton value=\"1\">1m</ToggleButton>\n                  <ToggleButton value=\"5\">5m</ToggleButton>\n                  <ToggleButton value=\"15\">15m</ToggleButton>\n                  <ToggleButton value=\"60\">1h</ToggleButton>\n                  <ToggleButton value=\"D\">1d</ToggleButton>\n                </ToggleButtonGroup>\n              </Box>\n            </Box>\n            \n            <TradingViewChart \n              symbol={selectedSymbol}\n              exchange=\"BINANCE\" // Or dynamically select based on the exchange\n              interval={timeframeValue}\n              height={500}\n            />\n          </Paper>\n          \n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <Paper sx={{ p: 2, height: '100%' }}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Open Orders\n                </Typography>\n                <Divider sx={{ mb: 2 }} />\n                \n                {openOrders.length === 0 ? (\n                  <Box sx={{ textAlign: 'center', py: 3 }}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      No open orders\n                    </Typography>\n                  </Box>\n                ) : (\n                  <TableContainer sx={{ maxHeight: 200 }}>\n                    <Table size=\"small\" stickyHeader>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Symbol</TableCell>\n                          <TableCell>Type</TableCell>\n                          <TableCell align=\"right\">Price</TableCell>\n                          <TableCell align=\"right\">Amount</TableCell>\n                          <TableCell align=\"right\">Filled</TableCell>\n                          <TableCell>Action</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {openOrders.map((order) => (\n                          <TableRow key={order.id} hover>\n                            <TableCell>\n                              <Typography variant=\"body2\">{order.symbol}</Typography>\n                              <Typography \n                                variant=\"caption\" \n                                color={order.side === 'buy' ? 'success.main' : 'error.main'}\n                              >\n                                {order.side.toUpperCase()}\n                              </Typography>\n                            </TableCell>\n                            <TableCell>{order.type.toUpperCase()}</TableCell>\n                            <TableCell align=\"right\">\n                              {order.price.toLocaleString(undefined, {\n                                minimumFractionDigits: 2,\n                                maximumFractionDigits: 2\n                              })}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                              {order.amount.toLocaleString(undefined, {\n                                minimumFractionDigits: 6,\n                                maximumFractionDigits: 6\n                              })}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                              {order.filled.toLocaleString(undefined, {\n                                minimumFractionDigits: 6,\n                                maximumFractionDigits: 6\n                              })}\n                            </TableCell>\n                            <TableCell>\n                              <IconButton \n                                size=\"small\" \n                                color=\"error\"\n                                onClick={() => handleCancelOrder(order.id)}\n                              >\n                                <CloseIcon fontSize=\"small\" />\n                              </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                )}\n              </Paper>\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n              <Paper sx={{ p: 2, height: '100%' }}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Order History\n                </Typography>\n                <Divider sx={{ mb: 2 }} />\n                \n                {orderHistory.length === 0 ? (\n                  <Box sx={{ textAlign: 'center', py: 3 }}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      No order history\n                    </Typography>\n                  </Box>\n                ) : (\n                  <TableContainer sx={{ maxHeight: 200 }}>\n                    <Table size=\"small\" stickyHeader>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Symbol</TableCell>\n                          <TableCell>Type</TableCell>\n                          <TableCell align=\"right\">Price</TableCell>\n                          <TableCell align=\"right\">Amount</TableCell>\n                          <TableCell>Status</TableCell>\n                          <TableCell>Date</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {orderHistory.map((order) => (\n                          <TableRow key={order.id} hover>\n                            <TableCell>\n                              <Typography variant=\"body2\">{order.symbol}</Typography>\n                              <Typography \n                                variant=\"caption\" \n                                color={order.side === 'buy' ? 'success.main' : 'error.main'}\n                              >\n                                {order.side.toUpperCase()}\n                              </Typography>\n                            </TableCell>\n                            <TableCell>{order.type.toUpperCase()}</TableCell>\n                            <TableCell align=\"right\">\n                              {order.price.toLocaleString(undefined, {\n                                minimumFractionDigits: 2,\n                                maximumFractionDigits: 2\n                              })}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                              {order.filled.toLocaleString(undefined, {\n                                minimumFractionDigits: 6,\n                                maximumFractionDigits: 6\n                              })}\n                            </TableCell>\n                            <TableCell>\n                              <Chip \n                                label={order.status.toUpperCase()}\n                                size=\"small\"\n                                color={order.status === 'filled' ? 'success' : 'default'}\n                                variant=\"outlined\"\n                              />\n                            </TableCell>\n                            <TableCell>\n                              {new Date(order.timestamp).toLocaleDateString()}\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                )}\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n        \n        <Grid item xs={12} lg={3}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Paper sx={{ p: 2 }}>\n                <Box sx={{ mb: 2 }}>\n                  <FormControl size=\"small\" fullWidth>\n                    <InputLabel>Order Type</InputLabel>\n                    <Select\n                      value={orderType}\n                      label=\"Order Type\"\n                      onChange={handleOrderTypeChange}\n                    >\n                      <MenuItem value=\"limit\">Limit</MenuItem>\n                      <MenuItem value=\"market\">Market</MenuItem>\n                      <MenuItem value=\"stop_limit\">Stop Limit</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Box>\n                \n                <ToggleButtonGroup\n                  value={tradeTab}\n                  exclusive\n                  onChange={handleTradeTabChange}\n                  fullWidth\n                  color={tradeTab === 'buy' ? 'success' : 'error'}\n                  sx={{ mb: 2 }}\n                >\n                  <ToggleButton value=\"buy\" sx={{ py: 1 }}>\n                    Buy {baseAsset}\n                  </ToggleButton>\n                  <ToggleButton value=\"sell\" sx={{ py: 1 }}>\n                    Sell {baseAsset}\n                  </ToggleButton>\n                </ToggleButtonGroup>\n                \n                {orderType !== 'market' && (\n                  <TextField\n                    label=\"Price\"\n                    type=\"number\"\n                    fullWidth\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    sx={{ mb: 2 }}\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">{quoteAsset}</InputAdornment>,\n                    }}\n                  />\n                )}\n                \n                {orderType === 'stop_limit' && (\n                  <TextField\n                    label=\"Stop Price\"\n                    type=\"number\"\n                    fullWidth\n                    value={stopPrice}\n                    onChange={(e) => setStopPrice(e.target.value)}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    sx={{ mb: 2 }}\n                    InputProps={{\n                      endAdornment: <InputAdornment position=\"end\">{quoteAsset}</InputAdornment>,\n                    }}\n                  />\n                )}\n                \n                <TextField\n                  label=\"Amount\"\n                  type=\"number\"\n                  fullWidth\n                  value={amount}\n                  onChange={(e) => setAmount(e.target.value)}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  sx={{ mb: 2 }}\n                  InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">{baseAsset}</InputAdornment>,\n                  }}\n                />\n                \n                <Box sx={{ px: 1, mb: 2 }}>\n                  <Slider\n                    value={sliderValue}\n                    onChange={handleSliderChange}\n                    valueLabelDisplay=\"auto\"\n                    valueLabelFormat={(value) => `${value}%`}\n                    marks={[\n                      { value: 0, label: '0%' },\n                      { value: 25, label: '25%' },\n                      { value: 50, label: '50%' },\n                      { value: 75, label: '75%' },\n                      { value: 100, label: '100%' },\n                    ]}\n                  />\n                </Box>\n                \n                {orderTotal > 0 && (\n                  <Typography variant=\"body2\" align=\"right\" sx={{ mb: 2 }}>\n                    Total: {orderTotal.toLocaleString(undefined, {\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2\n                    })} {quoteAsset}\n                  </Typography>\n                )}\n                \n                <Box sx={{ mb: 2 }}>\n                  <Button\n                    variant=\"contained\"\n                    fullWidth\n                    size=\"large\"\n                    onClick={handleSubmitOrder}\n                    disabled={isLoading || !price || !amount}\n                    color={tradeTab === 'buy' ? 'success' : 'error'}\n                  >\n                    {isLoading ? (\n                      <CircularProgress size={24} color=\"inherit\" />\n                    ) : tradeTab === 'buy' ? (\n                      `Buy ${baseAsset}`\n                    ) : (\n                      `Sell ${baseAsset}`\n                    )}\n                  </Button>\n                </Box>\n                \n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Available:\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    {tradeTab === 'buy' \n                      ? `${(balances[quoteAsset] || 0).toLocaleString()} ${quoteAsset}`\n                      : `${(balances[baseAsset] || 0).toLocaleString()} ${baseAsset}`\n                    }\n                  </Typography>\n                </Box>\n                \n                <Divider sx={{ my: 2 }} />\n                \n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n                  <Typography variant=\"subtitle2\">\n                    Advanced\n                  </Typography>\n                  <Switch\n                    size=\"small\"\n                    checked={advanced}\n                    onChange={(e) => setAdvanced(e.target.checked)}\n                  />\n                </Box>\n                \n                {advanced && (\n                  <>\n                    <FormControlLabel\n                      control={\n                        <Switch \n                          size=\"small\" \n                          checked={postOnly} \n                          onChange={(e) => setPostOnly(e.target.checked)}\n                        />\n                      }\n                      label={\n                        <Typography variant=\"body2\">\n                          Post Only\n                          <Tooltip title=\"Order will only be placed if it would be posted to the order book as a maker order\">\n                            <IconButton size=\"small\">\n                              <SettingsIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          </Tooltip>\n                        </Typography>\n                      }\n                    />\n                    \n                    <FormControlLabel\n                      control={\n                        <Switch \n                          size=\"small\" \n                          checked={reduceOnly} \n                          onChange={(e) => setReduceOnly(e.target.checked)}\n                        />\n                      }\n                      label={\n                        <Typography variant=\"body2\">\n                          Reduce Only\n                          <Tooltip title=\"Order will only reduce your position, not increase it\">\n                            <IconButton size=\"small\">\n                              <SettingsIcon fontSize=\"inherit\" />\n                            </IconButton>\n                          </Tooltip>\n                        </Typography>\n                      }\n                    />\n                  </>\n                )}\n              </Paper>\n            </Grid>\n            \n            <Grid item xs={12}>\n              <OrderBookVisualization \n                asks={orderBook.asks}\n                bids={orderBook.bids}\n                baseAsset={baseAsset}\n                quoteAsset={quoteAsset}\n                isLoading={isLoading}\n              />\n            </Grid>\n            \n            <Grid item xs={12}>\n              <Paper sx={{ p: 2 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Recent Trades\n                </Typography>\n                <Divider sx={{ mb: 2 }} />\n                \n                <TableContainer sx={{ maxHeight: 200 }}>\n                  <Table size=\"small\" stickyHeader>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Price</TableCell>\n                        <TableCell align=\"right\">Amount</TableCell>\n                        <TableCell align=\"right\">Time</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {recentTrades.map((trade) => (\n                        <TableRow key={trade.id} hover>\n                          <TableCell sx={{ color: trade.side === 'buy' ? 'success.main' : 'error.main' }}>\n                            {parseFloat(trade.price).toLocaleString(undefined, {\n                              minimumFractionDigits: 2,\n                              maximumFractionDigits: 2\n                            })}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {parseFloat(trade.amount).toLocaleString(undefined, {\n                              minimumFractionDigits: 6,\n                              maximumFractionDigits: 6\n                            })}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {new Date(trade.timestamp).toLocaleTimeString()}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TradingInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}