{"ast":null,"code":"var _jsxFileName = \"/Users/antenehtessema/Desktop/botsalgo/web_dashboard/src/pages/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Typography, Box, Paper, Card, CardContent, CardHeader, Button } from '@mui/material';\nimport { ArrowUpward as ArrowUpwardIcon, ArrowDownward as ArrowDownwardIcon, TrendingUp as TrendingUpIcon, AccessTime as AccessTimeIcon } from '@mui/icons-material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport TradingService from '../../services/TradingService';\n\n// Component for statistics cards\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatCard = ({\n  title,\n  value,\n  icon,\n  color,\n  subtitle,\n  trending\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            color: \"text.secondary\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            sx: {\n              my: 1,\n              fontWeight: 500\n            },\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [trending && trending !== 0 && /*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              sx: {\n                mr: 1,\n                display: 'flex',\n                alignItems: 'center',\n                color: trending > 0 ? 'success.main' : 'error.main'\n              },\n              children: [trending > 0 ? /*#__PURE__*/_jsxDEV(ArrowUpwardIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 35\n              }, this) : /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 74\n              }, this), Math.abs(trending), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          sx: {\n            textAlign: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 1.5,\n              borderRadius: '50%',\n              display: 'inline-flex',\n              bgcolor: `${color}.light`,\n              color: `${color}.main`\n            },\n            children: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = StatCard;\nconst Dashboard = () => {\n  _s();\n  const [statistics, setStatistics] = useState({\n    activeStrategies: 0,\n    totalProfit: 0,\n    profitTrending: 0,\n    winRate: 0,\n    totalTrades: 0\n  });\n  const [performanceData, setPerformanceData] = useState([]);\n  const [strategyPerformance, setStrategyPerformance] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        // In production, you would fetch data from your API\n        // const data = await TradingService.getDashboardData();\n\n        // For demonstration purposes, we'll use mock data\n        setTimeout(() => {\n          // Mock statistics\n          setStatistics({\n            activeStrategies: 3,\n            totalProfit: '$1,258.32',\n            profitTrending: 5.2,\n            winRate: '67%',\n            totalTrades: 34\n          });\n\n          // Mock chart data\n          const mockPerformanceData = [];\n          const today = new Date();\n          for (let i = 30; i >= 0; i--) {\n            const date = new Date(today);\n            date.setDate(today.getDate() - i);\n            mockPerformanceData.push({\n              date: date.toLocaleDateString('en-US', {\n                month: 'short',\n                day: 'numeric'\n              }),\n              value: 1000 + Math.floor(Math.random() * 200) + (30 - i) * 10\n            });\n          }\n          setPerformanceData(mockPerformanceData);\n\n          // Mock strategy performance\n          setStrategyPerformance([{\n            name: 'DCA Strategy',\n            profit: 8.2,\n            trades: 12\n          }, {\n            name: 'Grid Trading',\n            profit: 5.4,\n            trades: 67\n          }, {\n            name: 'Mean Reversion',\n            profit: 3.8,\n            trades: 24\n          }]);\n          setIsLoading(false);\n        }, 1000);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Trading Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(TrendingUpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 64\n        }, this),\n        children: \"New Strategy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Active Strategies\",\n          value: statistics.activeStrategies,\n          icon: /*#__PURE__*/_jsxDEV(TrendingUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this),\n          color: \"primary\",\n          subtitle: \"Running\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Profit\",\n          value: statistics.totalProfit,\n          icon: /*#__PURE__*/_jsxDEV(TrendingUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this),\n          color: \"success\",\n          trending: statistics.profitTrending,\n          subtitle: \"vs. last month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Win Rate\",\n          value: statistics.winRate,\n          icon: /*#__PURE__*/_jsxDEV(TrendingUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this),\n          color: \"info\",\n          subtitle: \"From all trades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(StatCard, {\n          title: \"Total Trades\",\n          value: statistics.totalTrades,\n          icon: /*#__PURE__*/_jsxDEV(AccessTimeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this),\n          color: \"warning\",\n          subtitle: \"Last 30 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2\n            },\n            children: \"Portfolio Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 300\n            },\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: \"100%\",\n              children: /*#__PURE__*/_jsxDEV(LineChart, {\n                data: performanceData,\n                margin: {\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5\n                },\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  formatter: value => [`$${value}`, 'Balance'],\n                  labelFormatter: label => `Date: ${label}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Line, {\n                  type: \"monotone\",\n                  dataKey: \"value\",\n                  stroke: \"#3f51b5\",\n                  activeDot: {\n                    r: 8\n                  },\n                  strokeWidth: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2\n            },\n            children: \"Strategy Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: strategyPerformance.map((strategy, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2,\n                pb: 2,\n                borderBottom: index < strategyPerformance.length - 1 ? '1px solid #eee' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    children: strategy.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: [strategy.trades, \" trades\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      color: strategy.profit > 0 ? 'success.main' : 'error.main',\n                      fontWeight: 500\n                    },\n                    children: [strategy.profit > 0 ? '+' : '', strategy.profit, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"outlined\",\n              children: \"View All Strategies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"/fmYyKaSvz8hLrApLMQsf+omOqo=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"StatCard\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Typography","Box","Paper","Card","CardContent","CardHeader","Button","ArrowUpward","ArrowUpwardIcon","ArrowDownward","ArrowDownwardIcon","TrendingUp","TrendingUpIcon","AccessTime","AccessTimeIcon","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","TradingService","jsxDEV","_jsxDEV","StatCard","title","value","icon","color","subtitle","trending","sx","height","children","container","spacing","alignItems","item","xs","variant","fileName","_jsxFileName","lineNumber","columnNumber","my","fontWeight","display","component","mr","fontSize","Math","abs","textAlign","p","borderRadius","bgcolor","_c","Dashboard","_s","statistics","setStatistics","activeStrategies","totalProfit","profitTrending","winRate","totalTrades","performanceData","setPerformanceData","strategyPerformance","setStrategyPerformance","isLoading","setIsLoading","fetchDashboardData","setTimeout","mockPerformanceData","today","Date","i","date","setDate","getDate","push","toLocaleDateString","month","day","floor","random","name","profit","trades","error","console","mb","justifyContent","startIcon","sm","md","width","data","margin","top","right","left","bottom","strokeDasharray","dataKey","formatter","labelFormatter","label","type","stroke","activeDot","r","strokeWidth","map","strategy","index","pb","borderBottom","length","mt","fullWidth","_c2","$RefreshReg$"],"sources":["/Users/antenehtessema/Desktop/botsalgo/web_dashboard/src/pages/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Grid, Typography, Box, Paper, Card, CardContent, CardHeader, Button } from '@mui/material';\nimport {\n  ArrowUpward as ArrowUpwardIcon,\n  ArrowDownward as ArrowDownwardIcon,\n  TrendingUp as TrendingUpIcon,\n  AccessTime as AccessTimeIcon,\n} from '@mui/icons-material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport TradingService from '../../services/TradingService';\n\n// Component for statistics cards\nconst StatCard = ({ title, value, icon, color, subtitle, trending }) => {\n  return (\n    <Card sx={{ height: '100%' }}>\n      <CardContent>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={8}>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\">\n              {title}\n            </Typography>\n            <Typography variant=\"h4\" sx={{ my: 1, fontWeight: 500 }}>\n              {value}\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              {trending && trending !== 0 && (\n                <Box \n                  component=\"span\" \n                  sx={{ \n                    mr: 1, \n                    display: 'flex',\n                    alignItems: 'center',\n                    color: trending > 0 ? 'success.main' : 'error.main'\n                  }}\n                >\n                  {trending > 0 ? <ArrowUpwardIcon fontSize=\"small\" /> : <ArrowDownwardIcon fontSize=\"small\" />}\n                  {Math.abs(trending)}%\n                </Box>\n              )}\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {subtitle}\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={4} sx={{ textAlign: 'right' }}>\n            <Box \n              sx={{ \n                p: 1.5, \n                borderRadius: '50%', \n                display: 'inline-flex',\n                bgcolor: `${color}.light`,\n                color: `${color}.main`\n              }}\n            >\n              {icon}\n            </Box>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst Dashboard = () => {\n  const [statistics, setStatistics] = useState({\n    activeStrategies: 0,\n    totalProfit: 0,\n    profitTrending: 0,\n    winRate: 0,\n    totalTrades: 0,\n  });\n\n  const [performanceData, setPerformanceData] = useState([]);\n  const [strategyPerformance, setStrategyPerformance] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        // In production, you would fetch data from your API\n        // const data = await TradingService.getDashboardData();\n        \n        // For demonstration purposes, we'll use mock data\n        setTimeout(() => {\n          // Mock statistics\n          setStatistics({\n            activeStrategies: 3,\n            totalProfit: '$1,258.32',\n            profitTrending: 5.2,\n            winRate: '67%',\n            totalTrades: 34,\n          });\n\n          // Mock chart data\n          const mockPerformanceData = [];\n          const today = new Date();\n          for (let i = 30; i >= 0; i--) {\n            const date = new Date(today);\n            date.setDate(today.getDate() - i);\n            mockPerformanceData.push({\n              date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\n              value: 1000 + Math.floor(Math.random() * 200) + (30 - i) * 10,\n            });\n          }\n          setPerformanceData(mockPerformanceData);\n\n          // Mock strategy performance\n          setStrategyPerformance([\n            { name: 'DCA Strategy', profit: 8.2, trades: 12 },\n            { name: 'Grid Trading', profit: 5.4, trades: 67 },\n            { name: 'Mean Reversion', profit: 3.8, trades: 24 },\n          ]);\n\n          setIsLoading(false);\n        }, 1000);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  return (\n    <Box>\n      <Box sx={{ mb: 4, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Trading Dashboard\n        </Typography>\n        <Button variant=\"contained\" color=\"primary\" startIcon={<TrendingUpIcon />}>\n          New Strategy\n        </Button>\n      </Box>\n\n      {/* Stats Cards */}\n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Active Strategies\"\n            value={statistics.activeStrategies}\n            icon={<TrendingUpIcon />}\n            color=\"primary\"\n            subtitle=\"Running\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Total Profit\"\n            value={statistics.totalProfit}\n            icon={<TrendingUpIcon />}\n            color=\"success\"\n            trending={statistics.profitTrending}\n            subtitle=\"vs. last month\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Win Rate\"\n            value={statistics.winRate}\n            icon={<TrendingUpIcon />}\n            color=\"info\"\n            subtitle=\"From all trades\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"Total Trades\"\n            value={statistics.totalTrades}\n            icon={<AccessTimeIcon />}\n            color=\"warning\"\n            subtitle=\"Last 30 days\"\n          />\n        </Grid>\n      </Grid>\n\n      {/* Charts */}\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={8}>\n          <Paper sx={{ p: 3, height: '100%' }}>\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>\n              Portfolio Performance\n            </Typography>\n            <Box sx={{ height: 300 }}>\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart\n                  data={performanceData}\n                  margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip \n                    formatter={(value) => [`$${value}`, 'Balance']}\n                    labelFormatter={(label) => `Date: ${label}`}\n                  />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"value\"\n                    stroke=\"#3f51b5\"\n                    activeDot={{ r: 8 }}\n                    strokeWidth={2}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </Box>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 3, height: '100%' }}>\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>\n              Strategy Performance\n            </Typography>\n            <Box sx={{ mb: 2 }}>\n              {strategyPerformance.map((strategy, index) => (\n                <Box key={index} sx={{ mb: 2, pb: 2, borderBottom: index < strategyPerformance.length - 1 ? '1px solid #eee' : 'none' }}>\n                  <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                    <Grid item>\n                      <Typography variant=\"body1\">{strategy.name}</Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        {strategy.trades} trades\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <Typography \n                        variant=\"body2\" \n                        sx={{ \n                          color: strategy.profit > 0 ? 'success.main' : 'error.main',\n                          fontWeight: 500\n                        }}\n                      >\n                        {strategy.profit > 0 ? '+' : ''}{strategy.profit}%\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Box>\n              ))}\n            </Box>\n            <Box sx={{ mt: 2 }}>\n              <Button fullWidth variant=\"outlined\">View All Strategies</Button>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}