{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance\nconst API_URL = process.env.REACT_APP_API_URL || (window.location.hostname === 'localhost' ? `${window.location.protocol}//${window.location.hostname}:8000/v1` : 'https://api.cryptotrading-platform.com/v1');\n\n// Create axios instance with default config\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Intercept requests to add auth token\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Intercept responses to handle token expiry\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  const originalRequest = error.config;\n\n  // If error is 401 and we haven't already tried refreshing the token\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) {\n        // If no refresh token, logout\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n        return Promise.reject(error);\n      }\n\n      // Attempt to refresh token\n      const response = await axios.post(`${API_URL}/auth/refresh-token`, {\n        refreshToken\n      });\n      const {\n        token\n      } = response.data;\n      localStorage.setItem('token', token);\n\n      // Update the original request and retry\n      originalRequest.headers['Authorization'] = `Bearer ${token}`;\n      return axiosInstance(originalRequest);\n    } catch (refreshError) {\n      // If refresh fails, logout\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","window","location","hostname","protocol","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","originalRequest","status","_retry","refreshToken","removeItem","href","post","data","setItem","refreshError"],"sources":["/Users/antenehtessema/Desktop/botsalgo/web_dashboard/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create an axios instance\nconst API_URL = process.env.REACT_APP_API_URL || \n  (window.location.hostname === 'localhost' ? \n    `${window.location.protocol}//${window.location.hostname}:8000/v1` : \n    'https://api.cryptotrading-platform.com/v1');\n\n// Create axios instance with default config\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Intercept requests to add auth token\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Intercept responses to handle token expiry\naxiosInstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async (error) => {\n    const originalRequest = error.config;\n    \n    // If error is 401 and we haven't already tried refreshing the token\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      \n      try {\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (!refreshToken) {\n          // If no refresh token, logout\n          localStorage.removeItem('token');\n          window.location.href = '/login';\n          return Promise.reject(error);\n        }\n        \n        // Attempt to refresh token\n        const response = await axios.post(`${API_URL}/auth/refresh-token`, {\n          refreshToken,\n        });\n        \n        const { token } = response.data;\n        localStorage.setItem('token', token);\n        \n        // Update the original request and retry\n        originalRequest.headers['Authorization'] = `Bearer ${token}`;\n        return axiosInstance(originalRequest);\n      } catch (refreshError) {\n        // If refresh fails, logout\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        window.location.href = '/login';\n        return Promise.reject(refreshError);\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,KAC1CC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,GACvC,GAAGF,MAAM,CAACC,QAAQ,CAACE,QAAQ,KAAKH,MAAM,CAACC,QAAQ,CAACC,QAAQ,UAAU,GAClE,2CAA2C,CAAC;;AAEhD;AACA,MAAME,aAAa,GAAGT,KAAK,CAACU,MAAM,CAAC;EACjCC,OAAO,EAAEV,OAAO;EAChBW,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAX,aAAa,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CACpCQ,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACD,MAAOH,KAAK,IAAK;EACf,MAAMI,eAAe,GAAGJ,KAAK,CAACJ,MAAM;;EAEpC;EACA,IAAII,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC5DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,IAAI;MACF,MAAMC,YAAY,GAAGT,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,IAAI,CAACQ,YAAY,EAAE;QACjB;QACAT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;QAChCvB,MAAM,CAACC,QAAQ,CAACuB,IAAI,GAAG,QAAQ;QAC/B,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;MAC9B;;MAEA;MACA,MAAMG,QAAQ,GAAG,MAAMvB,KAAK,CAAC8B,IAAI,CAAC,GAAG7B,OAAO,qBAAqB,EAAE;QACjE0B;MACF,CAAC,CAAC;MAEF,MAAM;QAAEV;MAAM,CAAC,GAAGM,QAAQ,CAACQ,IAAI;MAC/Bb,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEf,KAAK,CAAC;;MAEpC;MACAO,eAAe,CAACZ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;MAC5D,OAAOR,aAAa,CAACe,eAAe,CAAC;IACvC,CAAC,CAAC,OAAOS,YAAY,EAAE;MACrB;MACAf,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;MAChCV,YAAY,CAACU,UAAU,CAAC,cAAc,CAAC;MACvCvB,MAAM,CAACC,QAAQ,CAACuB,IAAI,GAAG,QAAQ;MAC/B,OAAOR,OAAO,CAACC,MAAM,CAACW,YAAY,CAAC;IACrC;EACF;EAEA,OAAOZ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}