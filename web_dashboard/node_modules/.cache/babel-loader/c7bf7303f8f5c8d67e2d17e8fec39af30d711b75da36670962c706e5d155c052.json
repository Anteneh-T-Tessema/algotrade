{"ast":null,"code":"import api from './api';\n\n// Base API URL\nconst API_BASE = '/v1';\nclass ExchangeService {\n  async getAllSupportedExchanges() {\n    try {\n      const response = await api.get(`${API_BASE}/exchanges/supported`);\n      return response.data.exchanges;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async getUserExchanges() {\n    try {\n      const response = await api.get(`${API_BASE}/exchanges/user`);\n      return response.data.exchanges;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async addExchangeApi(exchangeData) {\n    try {\n      const response = await api.post(`${API_BASE}/exchanges/api-keys`, exchangeData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async updateExchangeApi(keyId, exchangeData) {\n    try {\n      const response = await api.put(`${API_BASE}/exchanges/api-keys/${keyId}`, exchangeData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async deleteExchangeApi(keyId) {\n    try {\n      await api.delete(`${API_BASE}/exchanges/api-keys/${keyId}`);\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async verifyExchangeApi(exchangeData) {\n    try {\n      const response = await api.post(`${API_BASE}/exchanges/verify`, exchangeData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async getBalances(exchangeId) {\n    try {\n      const response = await api.get(`${API_BASE}/exchanges/${exchangeId}/balances`);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async getOrderHistory(exchangeId, params = {}) {\n    try {\n      const response = await api.get(`${API_BASE}/exchanges/${exchangeId}/orders`, {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async placeOrder(exchangeId, orderData) {\n    try {\n      const response = await api.post(`${API_BASE}/exchanges/${exchangeId}/orders`, orderData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async cancelOrder(exchangeId, orderId) {\n    try {\n      await api.delete(`${API_BASE}/exchanges/${exchangeId}/orders/${orderId}`);\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  _handleError(error) {\n    let errorMessage = 'An unexpected error occurred';\n    if (error.response) {\n      const {\n        status,\n        data\n      } = error.response;\n      if (data.message) {\n        errorMessage = data.message;\n      } else if (status === 400) {\n        errorMessage = 'Invalid exchange data provided.';\n      } else if (status === 401) {\n        errorMessage = 'Invalid API credentials.';\n      } else if (status === 403) {\n        errorMessage = 'API key does not have required permissions.';\n      } else if (status === 404) {\n        errorMessage = 'Exchange not found.';\n      } else if (status === 429) {\n        errorMessage = 'Rate limit exceeded. Please try again later.';\n      } else if (status === 502) {\n        errorMessage = 'Exchange API is currently unavailable.';\n      }\n    } else if (error.request) {\n      errorMessage = 'No response received from server. Please check your connection.';\n    }\n    throw new Error(errorMessage);\n  }\n}\nexport default new ExchangeService();","map":{"version":3,"names":["api","API_BASE","ExchangeService","getAllSupportedExchanges","response","get","data","exchanges","error","_handleError","getUserExchanges","addExchangeApi","exchangeData","post","updateExchangeApi","keyId","put","deleteExchangeApi","delete","verifyExchangeApi","getBalances","exchangeId","getOrderHistory","params","placeOrder","orderData","cancelOrder","orderId","errorMessage","status","message","request","Error"],"sources":["/Users/antenehtessema/Desktop/botsalgo/web_dashboard/src/services/ExchangeService.js"],"sourcesContent":["import api from './api';\n\n// Base API URL\nconst API_BASE = '/v1';\n\nclass ExchangeService {\n  async getAllSupportedExchanges() {\n    try {\n      const response = await api.get(`${API_BASE}/exchanges/supported`);\n      return response.data.exchanges;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async getUserExchanges() {\n    try {\n      const response = await api.get(`${API_BASE}/exchanges/user`);\n      return response.data.exchanges;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async addExchangeApi(exchangeData) {\n    try {\n      const response = await api.post(`${API_BASE}/exchanges/api-keys`, exchangeData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async updateExchangeApi(keyId, exchangeData) {\n    try {\n      const response = await api.put(`${API_BASE}/exchanges/api-keys/${keyId}`, exchangeData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async deleteExchangeApi(keyId) {\n    try {\n      await api.delete(`${API_BASE}/exchanges/api-keys/${keyId}`);\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async verifyExchangeApi(exchangeData) {\n    try {\n      const response = await api.post(`${API_BASE}/exchanges/verify`, exchangeData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async getBalances(exchangeId) {\n    try {\n      const response = await api.get(`${API_BASE}/exchanges/${exchangeId}/balances`);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async getOrderHistory(exchangeId, params = {}) {\n    try {\n      const response = await api.get(`${API_BASE}/exchanges/${exchangeId}/orders`, { params });\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async placeOrder(exchangeId, orderData) {\n    try {\n      const response = await api.post(`${API_BASE}/exchanges/${exchangeId}/orders`, orderData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async cancelOrder(exchangeId, orderId) {\n    try {\n      await api.delete(`${API_BASE}/exchanges/${exchangeId}/orders/${orderId}`);\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  _handleError(error) {\n    let errorMessage = 'An unexpected error occurred';\n    \n    if (error.response) {\n      const { status, data } = error.response;\n      \n      if (data.message) {\n        errorMessage = data.message;\n      } else if (status === 400) {\n        errorMessage = 'Invalid exchange data provided.';\n      } else if (status === 401) {\n        errorMessage = 'Invalid API credentials.';\n      } else if (status === 403) {\n        errorMessage = 'API key does not have required permissions.';\n      } else if (status === 404) {\n        errorMessage = 'Exchange not found.';\n      } else if (status === 429) {\n        errorMessage = 'Rate limit exceeded. Please try again later.';\n      } else if (status === 502) {\n        errorMessage = 'Exchange API is currently unavailable.';\n      }\n    } else if (error.request) {\n      errorMessage = 'No response received from server. Please check your connection.';\n    }\n    \n    throw new Error(errorMessage);\n  }\n}\n\nexport default new ExchangeService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}