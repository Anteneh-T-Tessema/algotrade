{"ast":null,"code":"import api from './api';\nclass AuthService {\n  async login(email, password, twoFactorCode = null) {\n    try {\n      const payload = {\n        email,\n        password\n      };\n      if (twoFactorCode) {\n        payload.twoFactorCode = twoFactorCode;\n      }\n      const response = await api.post('/auth/login', payload);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async register(userData) {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async logout() {\n    try {\n      await api.post('/auth/logout');\n      return true;\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Even if API call fails, we still want to clear local storage\n      return true;\n    }\n  }\n  async refreshToken(refreshToken) {\n    try {\n      const response = await api.post('/auth/refresh-token', {\n        refreshToken\n      });\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async getCurrentUser() {\n    try {\n      const response = await api.get('/users/me');\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async updateProfile(profileData) {\n    try {\n      const response = await api.put('/users/me', profileData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async requestPasswordReset(email) {\n    try {\n      await api.post('/auth/reset-password-request', {\n        email\n      });\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async resetPassword(token, newPassword) {\n    try {\n      await api.post('/auth/reset-password', {\n        token,\n        newPassword\n      });\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async updatePassword(currentPassword, newPassword) {\n    try {\n      await api.put('/users/me/password', {\n        currentPassword,\n        newPassword\n      });\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async enable2FA() {\n    try {\n      const response = await api.post('/users/me/2fa/enable');\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async verify2FA(code) {\n    try {\n      await api.post('/users/me/2fa/verify', {\n        code\n      });\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  async disable2FA(code) {\n    try {\n      await api.post('/users/me/2fa/disable', {\n        code\n      });\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  _handleError(error) {\n    let errorMessage = 'An unexpected error occurred';\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      const {\n        status,\n        data\n      } = error.response;\n      if (status === 400 && data.message) {\n        errorMessage = data.message;\n      } else if (status === 401) {\n        errorMessage = 'Authentication failed. Please log in again.';\n      } else if (status === 403) {\n        errorMessage = 'You do not have permission to perform this action.';\n      } else if (status === 404) {\n        errorMessage = 'The requested resource was not found.';\n      } else if (status === 422 && data.errors) {\n        // Validation errors\n        errorMessage = Object.values(data.errors).flat().join('. ');\n      } else if (data.message) {\n        errorMessage = data.message;\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      errorMessage = 'No response received from server. Please check your connection.';\n    }\n    throw new Error(errorMessage);\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["api","AuthService","login","email","password","twoFactorCode","payload","response","post","data","error","_handleError","register","userData","logout","console","refreshToken","getCurrentUser","get","updateProfile","profileData","put","requestPasswordReset","resetPassword","token","newPassword","updatePassword","currentPassword","enable2FA","verify2FA","code","disable2FA","errorMessage","status","message","errors","Object","values","flat","join","request","Error"],"sources":["/Users/antenehtessema/Desktop/botsalgo/web_dashboard/src/services/AuthService.js"],"sourcesContent":["import api from './api';\n\nclass AuthService {\n  async login(email, password, twoFactorCode = null) {\n    try {\n      const payload = {\n        email,\n        password,\n      };\n      \n      if (twoFactorCode) {\n        payload.twoFactorCode = twoFactorCode;\n      }\n      \n      const response = await api.post('/auth/login', payload);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async register(userData) {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async logout() {\n    try {\n      await api.post('/auth/logout');\n      return true;\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Even if API call fails, we still want to clear local storage\n      return true;\n    }\n  }\n  \n  async refreshToken(refreshToken) {\n    try {\n      const response = await api.post('/auth/refresh-token', { refreshToken });\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async getCurrentUser() {\n    try {\n      const response = await api.get('/users/me');\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async updateProfile(profileData) {\n    try {\n      const response = await api.put('/users/me', profileData);\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async requestPasswordReset(email) {\n    try {\n      await api.post('/auth/reset-password-request', { email });\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async resetPassword(token, newPassword) {\n    try {\n      await api.post('/auth/reset-password', { token, newPassword });\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async updatePassword(currentPassword, newPassword) {\n    try {\n      await api.put('/users/me/password', { currentPassword, newPassword });\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async enable2FA() {\n    try {\n      const response = await api.post('/users/me/2fa/enable');\n      return response.data;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async verify2FA(code) {\n    try {\n      await api.post('/users/me/2fa/verify', { code });\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  async disable2FA(code) {\n    try {\n      await api.post('/users/me/2fa/disable', { code });\n      return true;\n    } catch (error) {\n      this._handleError(error);\n    }\n  }\n  \n  _handleError(error) {\n    let errorMessage = 'An unexpected error occurred';\n    \n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      const { status, data } = error.response;\n      \n      if (status === 400 && data.message) {\n        errorMessage = data.message;\n      } else if (status === 401) {\n        errorMessage = 'Authentication failed. Please log in again.';\n      } else if (status === 403) {\n        errorMessage = 'You do not have permission to perform this action.';\n      } else if (status === 404) {\n        errorMessage = 'The requested resource was not found.';\n      } else if (status === 422 && data.errors) {\n        // Validation errors\n        errorMessage = Object.values(data.errors)\n          .flat()\n          .join('. ');\n      } else if (data.message) {\n        errorMessage = data.message;\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      errorMessage = 'No response received from server. Please check your connection.';\n    }\n    \n    throw new Error(errorMessage);\n  }\n}\n\nexport default new AuthService();\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,CAAC;EAChB,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,GAAG,IAAI,EAAE;IACjD,IAAI;MACF,MAAMC,OAAO,GAAG;QACdH,KAAK;QACLC;MACF,CAAC;MAED,IAAIC,aAAa,EAAE;QACjBC,OAAO,CAACD,aAAa,GAAGA,aAAa;MACvC;MAEA,MAAME,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,aAAa,EAAEF,OAAO,CAAC;MACvD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAC1B;EACF;EAEA,MAAME,QAAQA,CAACC,QAAQ,EAAE;IACvB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,gBAAgB,EAAEK,QAAQ,CAAC;MAC3D,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAC1B;EACF;EAEA,MAAMI,MAAMA,CAAA,EAAG;IACb,IAAI;MACF,MAAMd,GAAG,CAACQ,IAAI,CAAC,cAAc,CAAC;MAC9B,OAAO,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdK,OAAO,CAACL,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC;MACA,OAAO,IAAI;IACb;EACF;EAEA,MAAMM,YAAYA,CAACA,YAAY,EAAE;IAC/B,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,qBAAqB,EAAE;QAAEQ;MAAa,CAAC,CAAC;MACxE,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAC1B;EACF;EAEA,MAAMO,cAAcA,CAAA,EAAG;IACrB,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMP,GAAG,CAACkB,GAAG,CAAC,WAAW,CAAC;MAC3C,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAC1B;EACF;EAEA,MAAMS,aAAaA,CAACC,WAAW,EAAE;IAC/B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMP,GAAG,CAACqB,GAAG,CAAC,WAAW,EAAED,WAAW,CAAC;MACxD,OAAOb,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAC1B;EACF;EAEA,MAAMY,oBAAoBA,CAACnB,KAAK,EAAE;IAChC,IAAI;MACF,MAAMH,GAAG,CAACQ,IAAI,CAAC,8BAA8B,EAAE;QAAEL;MAAM,CAAC,CAAC;MACzD,OAAO,IAAI;IACb,CAAC,CAAC,OAAOO,KAAK,EAAE;MACd,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAC1B;EACF;EAEA,MAAMa,aAAaA,CAACC,KAAK,EAAEC,WAAW,EAAE;IACtC,IAAI;MACF,MAAMzB,GAAG,CAACQ,IAAI,CAAC,sBAAsB,EAAE;QAAEgB,KAAK;QAAEC;MAAY,CAAC,CAAC;MAC9D,OAAO,IAAI;IACb,CAAC,CAAC,OAAOf,KAAK,EAAE;MACd,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAC1B;EACF;EAEA,MAAMgB,cAAcA,CAACC,eAAe,EAAEF,WAAW,EAAE;IACjD,IAAI;MACF,MAAMzB,GAAG,CAACqB,GAAG,CAAC,oBAAoB,EAAE;QAAEM,eAAe;QAAEF;MAAY,CAAC,CAAC;MACrE,OAAO,IAAI;IACb,CAAC,CAAC,OAAOf,KAAK,EAAE;MACd,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAC1B;EACF;EAEA,MAAMkB,SAASA,CAAA,EAAG;IAChB,IAAI;MACF,MAAMrB,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,sBAAsB,CAAC;MACvD,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAC1B;EACF;EAEA,MAAMmB,SAASA,CAACC,IAAI,EAAE;IACpB,IAAI;MACF,MAAM9B,GAAG,CAACQ,IAAI,CAAC,sBAAsB,EAAE;QAAEsB;MAAK,CAAC,CAAC;MAChD,OAAO,IAAI;IACb,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACd,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAC1B;EACF;EAEA,MAAMqB,UAAUA,CAACD,IAAI,EAAE;IACrB,IAAI;MACF,MAAM9B,GAAG,CAACQ,IAAI,CAAC,uBAAuB,EAAE;QAAEsB;MAAK,CAAC,CAAC;MACjD,OAAO,IAAI;IACb,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACd,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;IAC1B;EACF;EAEAC,YAAYA,CAACD,KAAK,EAAE;IAClB,IAAIsB,YAAY,GAAG,8BAA8B;IAEjD,IAAItB,KAAK,CAACH,QAAQ,EAAE;MAClB;MACA;MACA,MAAM;QAAE0B,MAAM;QAAExB;MAAK,CAAC,GAAGC,KAAK,CAACH,QAAQ;MAEvC,IAAI0B,MAAM,KAAK,GAAG,IAAIxB,IAAI,CAACyB,OAAO,EAAE;QAClCF,YAAY,GAAGvB,IAAI,CAACyB,OAAO;MAC7B,CAAC,MAAM,IAAID,MAAM,KAAK,GAAG,EAAE;QACzBD,YAAY,GAAG,6CAA6C;MAC9D,CAAC,MAAM,IAAIC,MAAM,KAAK,GAAG,EAAE;QACzBD,YAAY,GAAG,oDAAoD;MACrE,CAAC,MAAM,IAAIC,MAAM,KAAK,GAAG,EAAE;QACzBD,YAAY,GAAG,uCAAuC;MACxD,CAAC,MAAM,IAAIC,MAAM,KAAK,GAAG,IAAIxB,IAAI,CAAC0B,MAAM,EAAE;QACxC;QACAH,YAAY,GAAGI,MAAM,CAACC,MAAM,CAAC5B,IAAI,CAAC0B,MAAM,CAAC,CACtCG,IAAI,CAAC,CAAC,CACNC,IAAI,CAAC,IAAI,CAAC;MACf,CAAC,MAAM,IAAI9B,IAAI,CAACyB,OAAO,EAAE;QACvBF,YAAY,GAAGvB,IAAI,CAACyB,OAAO;MAC7B;IACF,CAAC,MAAM,IAAIxB,KAAK,CAAC8B,OAAO,EAAE;MACxB;MACAR,YAAY,GAAG,iEAAiE;IAClF;IAEA,MAAM,IAAIS,KAAK,CAACT,YAAY,CAAC;EAC/B;AACF;AAEA,eAAe,IAAI/B,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}